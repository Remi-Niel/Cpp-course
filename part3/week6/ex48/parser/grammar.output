[grammar (info)] Line 33: 
Production Rules:
   (precedences (shown between parentheses) were set by %prec;
    are equal to the precedence of the rules' 1st terminal tokens;
    or (if not shown) are equal to the default (max) precedence)
1: repl ('\x0a') ->  '\x0a'
2: repl ('m') ->  'm' DOUBLE '\x0a'
3: repl ('s') ->  's' DOUBLE '\x0a'
4: repl (DOUBLE) ->  DOUBLE '\x0a'
5: repl (DOUBLE) ->  DOUBLE INTEGER '\x0a'
6: repl ->  repl repl
7: repl_$ ->  repl


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER
   258: DOUBLE
    10: '\x0a'
   109: 'm'
   115: 's'


Grammar States: 

State 0:
7: repl_$ ->  . repl 
  0:   On repl to state 1
  1:   On '\x0a' to state 2
  2:   On 'm' to state 3
  3:   On 's' to state 4
  4:   On DOUBLE to state 5


State 1:
7: repl_$ -> repl  . 
6: repl -> repl  . repl 
  0:   On repl to state 6
  1:   On '\x0a' to state 2
  2:   On 'm' to state 3
  3:   On 's' to state 4
  4:   On DOUBLE to state 5


State 2:
1: repl -> '\x0a'  . 
  Reduce by 1: repl -> '\x0a'  . 


State 3:
2: repl -> 'm'  . DOUBLE '\x0a' 
  0:   On DOUBLE to state 7


State 4:
3: repl -> 's'  . DOUBLE '\x0a' 
  0:   On DOUBLE to state 8


State 5:
4: repl -> DOUBLE  . '\x0a' 
5: repl -> DOUBLE  . INTEGER '\x0a' 
  0:   On '\x0a' to state 9
  1:   On INTEGER to state 10


State 6:
6: repl -> repl repl  . 
6: repl -> repl  . repl 
  0:   On repl to state 6
  1:   On '\x0a' to state 2
  2:   On 'm' to state 3
  3:   On 's' to state 4
  4:   On DOUBLE to state 5
  Reduce by 6: repl -> repl repl  . 
Solved SR CONFLICT on '\x0a':
	shift to state 2, removed '\x0a' from LA-set of rule 6)
Solved SR CONFLICT on 'm':
	shift to state 3, removed 'm' from LA-set of rule 6)
Solved SR CONFLICT on 's':
	shift to state 4, removed 's' from LA-set of rule 6)
Solved SR CONFLICT on DOUBLE:
	shift to state 5, removed DOUBLE from LA-set of rule 6)
Solved SR CONFLICT on DOUBLE:
	shift to state 5, removed DOUBLE from LA-set of rule 6)


State 7:
2: repl -> 'm' DOUBLE  . '\x0a' 
  0:   On '\x0a' to state 11


State 8:
3: repl -> 's' DOUBLE  . '\x0a' 
  0:   On '\x0a' to state 12


State 9:
4: repl -> DOUBLE '\x0a'  . 
  Reduce by 4: repl -> DOUBLE '\x0a'  . 


State 10:
5: repl -> DOUBLE INTEGER  . '\x0a' 
  0:   On '\x0a' to state 13


State 11:
2: repl -> 'm' DOUBLE '\x0a'  . 
  Reduce by 2: repl -> 'm' DOUBLE '\x0a'  . 


State 12:
3: repl -> 's' DOUBLE '\x0a'  . 
  Reduce by 3: repl -> 's' DOUBLE '\x0a'  . 


State 13:
5: repl -> DOUBLE INTEGER '\x0a'  . 
  Reduce by 5: repl -> DOUBLE INTEGER '\x0a'  . 



