[grammar (info)] Line 142: 
Production Rules:
   (precedences (shown between parentheses) were set by %prec;
    are equal to the precedence of the rules' 1st terminal tokens;
    or (if not shown) are equal to the default (max) precedence)
1: lines ->  lines line
2: lines ->  line
3: line ('\x0a') ->  expr '\x0a'
4: line (errTok__) ->  errTok__ '\x0a'
5: line ('\x0a') ->  '\x0a'
6: line (END) ->  END '\x0a'
7: expr (NUMBER) ->  NUMBER
8: expr ->  ident
9: expr (uMinus) ->  '-' expr
10: expr ('+') ->  expr '+' expr
11: expr ('-') ->  expr '-' expr
12: expr ('(') ->  '(' expr ')'
13: expr ('=') ->  expr '=' expr
14: expr ('(') ->  ident '(' exprList ')'
15: exprList (',') ->  exprList ',' expr
16: exprList ->  expr
17: ident (IDENT) ->  IDENT
18: lines_$ ->  lines


Symbolic Terminal tokens:
       error
       EOF
   257: NUMBER
   258: IDENT
   259: END
    61: '='
    43: '+'
    45: '-'
   260: uMinus
    10: '\x0a'
    40: '('
    41: ')'
    44: ','


Grammar States: 

State 0:
18: lines_$ ->  . lines 
  0:   On lines to state 1
  1:   On line to state 2
  2:   On expr to state 3
  3:   On errTok__ to state 4
  4:   On '\x0a' to state 5
  5:   On END to state 6
  6:   On NUMBER to state 7
  7:   On ident to state 8
  8:   On '-' to state 9
  9:   On '(' to state 10
  10:   On IDENT to state 11


State 1:
18: lines_$ -> lines  . 
1: lines -> lines  . line 
  0:   On line to state 12
  1:   On expr to state 3
  2:   On errTok__ to state 4
  3:   On '\x0a' to state 5
  4:   On END to state 6
  5:   On NUMBER to state 7
  6:   On ident to state 8
  7:   On '-' to state 9
  8:   On '(' to state 10
  9:   On IDENT to state 11


State 2:
2: lines -> line  . 
  Reduce by 2: lines -> line  . 


State 3:
3: line -> expr  . '\x0a' 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0:   On '\x0a' to state 13
  1:   On '+' to state 14
  2:   On '-' to state 15
  3:   On '=' to state 16


State 4:
4: line -> errTok__  . '\x0a' 
  0:   On '\x0a' to state 17


State 5:
5: line -> '\x0a'  . 
  Reduce by 5: line -> '\x0a'  . 


State 6:
6: line -> END  . '\x0a' 
  0:   On '\x0a' to state 18


State 7:
7: expr -> NUMBER  . 
  Reduce by 7: expr -> NUMBER  . 


State 8:
8: expr -> ident  . 
14: expr -> ident  . '(' exprList ')' 
  0:   On '(' to state 19
  Reduce by 8: expr -> ident  . 


State 9:
9: expr -> '-'  . expr 
  0:   On expr to state 20
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 10:
12: expr -> '('  . expr ')' 
  0:   On expr to state 21
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 11:
17: ident -> IDENT  . 
  Reduce by 17: ident -> IDENT  . 


State 12:
1: lines -> lines line  . 
  Reduce by 1: lines -> lines line  . 


State 13:
3: line -> expr '\x0a'  . 
  Reduce by 3: line -> expr '\x0a'  . 


State 14:
10: expr -> expr '+'  . expr 
  0:   On expr to state 22
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 15:
11: expr -> expr '-'  . expr 
  0:   On expr to state 23
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 16:
13: expr -> expr '='  . expr 
  0:   On expr to state 24
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 17:
4: line -> errTok__ '\x0a'  . 
  Reduce by 4: line -> errTok__ '\x0a'  . 


State 18:
6: line -> END '\x0a'  . 
  Reduce by 6: line -> END '\x0a'  . 


State 19:
14: expr -> ident '('  . exprList ')' 
  0:   On exprList to state 25
  1:   On expr to state 26
  2:   On NUMBER to state 7
  3:   On ident to state 8
  4:   On '-' to state 9
  5:   On '(' to state 10
  6:   On IDENT to state 11


State 20:
9: expr -> '-' expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0 (removed by precedence):   On '+' to state 14
  1 (removed by precedence):   On '-' to state 15
  2 (removed by precedence):   On '=' to state 16
  Reduce by 9: expr -> '-' expr  . 


State 21:
12: expr -> '(' expr  . ')' 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0:   On ')' to state 27
  1:   On '+' to state 14
  2:   On '-' to state 15
  3:   On '=' to state 16


State 22:
10: expr -> expr '+' expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0 (removed by precedence):   On '+' to state 14
  1 (removed by precedence):   On '-' to state 15
  2 (removed by precedence):   On '=' to state 16
  Reduce by 10: expr -> expr '+' expr  . 


State 23:
11: expr -> expr '-' expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0 (removed by precedence):   On '+' to state 14
  1 (removed by precedence):   On '-' to state 15
  2 (removed by precedence):   On '=' to state 16
  Reduce by 11: expr -> expr '-' expr  . 


State 24:
13: expr -> expr '=' expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0:   On '+' to state 14
  1:   On '-' to state 15
  2:   On '=' to state 16
  Reduce by 13: expr -> expr '=' expr  . 


State 25:
14: expr -> ident '(' exprList  . ')' 
15: exprList -> exprList  . ',' expr 
  0:   On ')' to state 28
  1:   On ',' to state 29


State 26:
16: exprList -> expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0:   On '+' to state 14
  1:   On '-' to state 15
  2:   On '=' to state 16
  Reduce by 16: exprList -> expr  . 


State 27:
12: expr -> '(' expr ')'  . 
  Reduce by 12: expr -> '(' expr ')'  . 


State 28:
14: expr -> ident '(' exprList ')'  . 
  Reduce by 14: expr -> ident '(' exprList ')'  . 


State 29:
15: exprList -> exprList ','  . expr 
  0:   On expr to state 30
  1:   On NUMBER to state 7
  2:   On ident to state 8
  3:   On '-' to state 9
  4:   On '(' to state 10
  5:   On IDENT to state 11


State 30:
15: exprList -> exprList ',' expr  . 
10: expr -> expr  . '+' expr 
11: expr -> expr  . '-' expr 
13: expr -> expr  . '=' expr 
  0:   On '+' to state 14
  1:   On '-' to state 15
  2:   On '=' to state 16
  Reduce by 15: exprList -> exprList ',' expr  . 



