// flexc++ definition section

alpha       [a-zA-Z]
num         [0-9]
alphanum    [a-zA-Z0-9]

%%
// flexc++ rules section

[ \t]                                               //ignored
[0-9]+                                            return INT;
[a-zA-Z_][a-zA-Z0-9_]*                              return WORD;
[0-9]+(\.[0-9]+)((e|E)[0-9]+)?                     return FLOAT;
(=)|(\+)|(-)|(\/)|(\*)|(%)|(\+\+)|(--)|(==)|(!-)    return OPER;
(\>)|(\<)|(\>=)|(\<=)|(!)|(&&)|(\|\|)|(~)|(&)       return OPER;
(\|)|(\^)|(\<\<)|(\>\>)|(\+=)|(-=)|(\*=)|(\/=)      return OPER;
(%=)|(&=)|(\|=)|(\^=)|(\<\<=)|(\>\>=)               return OPER;
(\"(.|\n)\"([ \t]))\n?                              return STRING;
'[.]'                                               return matched()[1];
\n                                                  return ENDL;
<<EOF>>                                             return DONE;
