Minimal match feature is not needed because it would not enable flexc++ to process more than it does now.
Minimal matches can be emulated by making use of mini-scanners. In our case we introduce a mini-scanner which
scans words, but not the word house.

In the initial scanner "house" is accepted and single characters start the miniscanner "word". This miniscanner processes
the text char by char untill the next char is either not a letter or is followed by "house". In both cases it stops and returns
to the initial scanner.

Since "house" is always larger than a single character it has precedence in the initial scanner. And the miniscanner stops the
moment it encounters it. Hence words with house in it are split up into parts.