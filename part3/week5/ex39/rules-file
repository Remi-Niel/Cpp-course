// flexc++ definition section

%x word

%%
[ \t\n]                               //ignore blanks

//If house is part of household or houseboat
// print house.
house/boat[^a-zA-Z\-]               |
house/hold[^a-zA-Z\-]               std::cout << matched() << '\n';

[a-zA-Z\-]                          {
                                        more();
                                        begin(StartCondition__::word);
                                    }

//Accept the rest of the word and output it, null is accepted here
//because  when starting the <word>  miniscanner involves calling more(),
// hence matched() is cannot be empty and the action exits the miniscanner.
<word>[a-zA-Z\-]*                   {
                                        std::cout << matched() << '\n';
                                        begin(StartCondition__::INITIAL);
                                    }
